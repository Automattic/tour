<?xml version="1.0"?>
<ruleset name="WordPress Coding Standards for GlotPress">

	<!-- Check all PHP files in directory tree by default. -->
	<arg name="extensions" value="php"/>

	<!-- Allow invoking just `phpcs` on command line without assuming STDIN for file input. -->
	<file>.</file>

	<!-- Show progress and sniff codes in all reports -->
	<arg value="ps"/>

	<!-- Check up to 20 files simultaneously. -->
	<arg name="parallel" value="20"/>

	<!-- Whenever possible, cache the scan results and re-use those for unchanged files on the next scan. -->
	<arg name="cache"/>

	<rule ref="WordPress-Core">
		<exclude name="WordPress.Files.FileName.InvalidClassFileName" />
		<exclude name="WordPress.WP.AlternativeFunctions.file_get_contents_file_get_contents" />
		<exclude name="WordPress.WP.AlternativeFunctions.file_system_read_file_get_contents" />
	</rule>
	<rule ref="WordPress-Docs" />
	<rule ref="WordPress-Extra">
		<!-- _e() and _ex() are considered safe for translations. -->
		<exclude name="WordPress.Security.EscapeOutput.UnsafePrintingFunction" />
	</rule>

	<rule ref="WordPress.WP.I18n">
		<properties>
			<property name="text_domain" value="tour" />
		</properties>
	</rule>

	<rule ref="WordPress.Arrays.MultipleStatementAlignment">
		<properties>
			<property name="maxColumn" value="80"/>
		</properties>
	</rule>

	<rule ref="Generic.Commenting.DocComment.MissingShort">
		<!-- Temporarily disabled until https://github.com/WordPress/WordPress-Coding-Standards/issues/403 is fixed. -->
		<severity>0</severity>
	</rule>

	<!-- Set minimum supported WordPress version. -->
	<config name="minimum_supported_wp_version" value="4.6"/>

	<config name="testVersion" value="7.4-"/>

	<exclude-pattern>/blocks/*</exclude-pattern>
	<exclude-pattern>/tests/*</exclude-pattern>
	<exclude-pattern>/node_modules/*</exclude-pattern>
	<exclude-pattern>/vendor/*</exclude-pattern>
	<exclude-pattern>/locales/*</exclude-pattern>
	<exclude-pattern>/bin/*</exclude-pattern>

	<rule ref="Squiz.Commenting.InlineComment.InvalidEndChar">
		<type>warning</type>
	</rule>
	<rule ref="Squiz.Commenting.FunctionComment.Missing">
		<type>warning</type>
	</rule>
	<rule ref="Squiz.Commenting.FunctionComment.MissingParamTag">
		<type>warning</type>
	</rule>
	<rule ref="Squiz.Commenting.FunctionComment.MissingParamComment">
		<type>warning</type>
	</rule>
	<rule ref="Squiz.Commenting.FunctionComment.ParamNameNoMatch">
		<type>warning</type>
	</rule>
	<rule ref="Squiz.Commenting.FunctionComment.ParamCommentFullStop">
		<type>warning</type>
	</rule>
	<rule ref="Squiz.Commenting.FunctionComment.WrongStyle">
		<type>warning</type>
	</rule>
	<rule ref="Squiz.Commenting.FunctionComment.MissingParamName">
		<type>warning</type>
	</rule>
	<rule ref="Squiz.Commenting.FunctionComment.SpacingAfter">
		<type>warning</type>
	</rule>
	<rule ref="Squiz.Commenting.VariableComment.Missing">
		<type>warning</type>
	</rule>
	<rule ref="Squiz.Commenting.VariableComment.WrongStyle">
		<type>warning</type>
	</rule>
	<rule ref="Squiz.Commenting.ClassComment.Missing">
		<type>warning</type>
	</rule>
	<rule ref="Squiz.Commenting.FileComment.Missing">
		<type>warning</type>
	</rule>
	<rule ref="Squiz.Commenting.FileComment.SpacingAfterComment">
		<type>warning</type>
	</rule>
	<rule ref="Squiz.Commenting.FileComment.MissingPackageTag">
		<type>warning</type>
	</rule>
	<rule ref="WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase">
		<type>warning</type>
	</rule>
	<rule ref="Squiz.Operators.IncrementDecrementUsage.Found">
		<type>warning</type>
	</rule>
	<rule ref="Squiz.PHP.DisallowMultipleAssignments.Found">
		<type>warning</type>
	</rule>
	<rule ref="Squiz.PHP.DisallowMultipleAssignments.FoundInControlStructure">
		<type>warning</type>
	</rule>
	<rule ref="PSR2.Classes.PropertyDeclaration.VarUsed">
		<type>warning</type>
	</rule>
	<rule ref="PSR2.Classes.PropertyDeclaration.ScopeMissing">
		<type>warning</type>
	</rule>
	<rule ref="WordPress.PHP.DontExtract.extract_extract">
		<type>warning</type>
	</rule>
</ruleset>
